import requests

from loader import bot
from telebot.types import Message
from states.hotel_information import HotelInfoState, BestDealState
from utils.api_requests.city_request import city_request
from utils.api_requests.hotels_request import hotels_request
from utils.api_requests.photo_request import photo_request
from time import sleep
from random import choice

is_low_price = None
is_best_deal = None
tmp_min_price = 0


@bot.message_handler(commands=['lowprice', 'highprice', 'bestdeal'])
def any_command(message: Message) -> None:
    global is_low_price, is_best_deal
    if message.text[1:] == 'lowprice':
        is_low_price, is_best_deal = True, False

    elif message.text[1:] == 'bestdeal':
        is_best_deal, is_low_price = True, False

    else:
        is_low_price, is_best_deal = False, False

    bot.set_state(message.from_user.id, HotelInfoState.city, message.chat.id)
    bot.send_message(message.from_user.id, choice(['–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞',
                                                   '–ì–¥–µ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?',
                                                   '–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞?',
                                                   '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?',
                                                   '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞']))


@bot.message_handler(state=HotelInfoState.city)
def get_city(message: Message) -> None:

    if message.text.isalpha() and city_request(message.text):
        bot.set_state(message.from_user.id, HotelInfoState.hotel_amt, message.chat.id)
        sleep(2)
        bot.send_message(message.from_user.id, choice(['–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π',
                                                       '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å –º–Ω–µ –Ω—É–∂–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π',
                                                       '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –°–∫–æ–ª—å–∫–æ –æ—Ç–µ–ª–µ–π –∏—â–µ–º?']))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['city'], data['cityID'] = city_request(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–ù–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞.\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
                                                       '–ß—Ç–æ-—Ç–æ –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥.\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
                                                       '–°—Ç—Ä–∞–Ω–Ω–æ... –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–∞–∫–æ–º—É –≥–æ—Ä–æ–¥—É.\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑']))


@bot.message_handler(state=HotelInfoState.hotel_amt)
def get_hotel_amt(message: Message) -> None:

    if message.text.isdigit() and 0 < int(message.text) <= 10:
        bot.set_state(message.from_user.id, HotelInfoState.need_photo, message.chat.id)
        sleep(2)
        bot.send_message(message.from_user.id, choice(['–û—Ç–ª–∏—á–Ω–æ! –ù—É–∂–Ω—ã –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?',
                                                       '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?',
                                                       '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ! –ù—É–∂–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?']))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['hotel_amt'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º '
                                                       '–∏ —è —Å–º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å '
                                                       '–Ω–µ –±–æ–ª—å—à–µ 10 –æ—Ç–µ–ª–µ–π',
                                                       '–ú–æ–∏—Ö —Å–∏–ª —Ö–≤–∞—Ç–∏—Ç –Ω–∞ 10 –æ—Ç–µ–ª–µ–π –∏ —Ç—É—Ç –∂–¥—É —á–∏—Å–ª–æ...\n'
                                                       '–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ...',
                                                       '–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ 11']))


@bot.message_handler(state=HotelInfoState.need_photo)
def get_photos(message: Message) -> None:
    if message.text == '–î–∞':

        bot.set_state(message.from_user.id, HotelInfoState.photo_amt, message.chat.id)
        bot.send_message(message.from_user.id, choice(['–ó–Ω–∞—á–∏—Ç —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏.\n'
                                                       '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π',
                                                       '–•–æ—Ä–æ—à–æ, –±—É–¥—É—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.üì∏\n'
                                                       '–ü–æ–π–¥—É –Ω–∞—Ñ–æ—Ç–∫–∞—éüòÜ\n'
                                                       '–°–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞ –æ—Ç–µ–ª—å?',
                                                       '–û—Ç–º–µ—Ç–∏–ª —É —Å–µ–±—è –≤ –±–ª–æ–∫–Ω–æ—Ç–µ.\n'
                                                       '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω—É–∂–Ω—ã ‚úÖ\n'
                                                       '–ó–∞–ø–∏—à—É - –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π?']))
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['need_photo'] = True

    elif message.text == '–ù–µ—Ç':
        bot.set_state(message.from_user.id, HotelInfoState.info_low_high, message.chat.id)

        if not is_best_deal:
            bot.send_message(message.from_user.id, choice(['–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?',
                                                           '–¢–∞–∫...\n–í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?',
                                                           '–ù—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É?\n'
                                                           '–ü—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ "–î–∞"ü§´']))
        else:
            bot.send_message(message.from_user.id, choice(['–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º?',
                                                           '–ò–¥–µ–º –¥–∞–ª—å—à–µ?',
                                                           '–í—ã —Ç—É—Ç?ü•∂',
                                                           '–ê—Éüîé, –ø–æ–π–¥–µ–º –¥–∞–ª—å—à–µ –∏—Å–∫–∞—Ç—å?']))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['need_photo'] = False

    else:
        bot.send_message(message.from_user.id, choice(['–¢–∞–∫ "–î–∞" –∏–ª–∏ "–ù–µ—Ç"?',
                                                       'üîô –ù—É–∂–Ω–æ "–ù–µ—Ç" –ª–∏–±–æ "–î–∞"',
                                                       'üì¥ "–î–∞" –∏–ª–∏ "–ù–µ—Ç"',
                                                       'ü§¶ –ü–æ–π–º—É —Ç–æ–ª—å–∫–æ "–î–∞" –∏–ª–∏ "–ù–µ—Ç"']))


@bot.message_handler(state=HotelInfoState.photo_amt)
def photo_amt(message: Message) -> None:
    if message.text.isdigit() and 0 < int(message.text) <= 5:
        bot.set_state(message.from_user.id, HotelInfoState.info_low_high, message.chat.id)
        if not is_best_deal:
            bot.send_message(message.from_user.id, choice(['–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ!\n'
                                                           '–í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?üìë',
                                                           '–£—Å–ø–µ—à–Ω–æ!\n'
                                                           '–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?üìú',
                                                           '–ì–æ—Ç–æ–≤–æ!\n'
                                                           '–ù—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É?üìÉ']))
        else:
            bot.send_message(message.from_user.id, choice(['–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!\n'
                                                           '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?üè©',
                                                           '–û—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ!\n'
                                                           '–ü–æ–¥–±–∏—Ä–∞–µ–º –¥–∞–ª—å—à–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?üè®',
                                                           '–û—Ç–ª–∏—á–Ω–æ!\n'
                                                           '–ò–¥–µ–º –¥–∞–ª—å—à–µ, –∏—Å–∫–∞—Ç—å –ª—É—á—à–∏–µ –æ—Ç–µ–ª–∏?üè®']))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['photo_amt'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–Ø —Å–º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ 5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n'
                                                       '–ò —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ',
                                                       '–¢—É—Ç —Ç–∞–∫–æ–µ –¥–µ–ª–æ...\n'
                                                       '–ú–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –≤—ã—Ç—è–Ω–µ—Ç —Ç–æ–ª—å–∫–æ 5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n'
                                                       '–ò —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ',
                                                       '–í—Å—ë, —á—Ç–æ –º–µ–∂–¥—É 0 –∏ 5(–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) —è –ø—Ä–∏–º—Éüòä']))


@bot.message_handler(state=HotelInfoState.info_low_high)
def info_low_high(message: Message) -> None:

    if message.text == '–î–∞':
        if is_best_deal:
            bot.set_state(message.from_user.id, BestDealState.price_min, message.chat.id)
            bot.send_message(message.from_user.id, choice(['–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –¥–ª—è –ø–æ–∏—Å–∫–∞($)',
                                                           '–ù—É–∂–Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ ($)',
                                                           '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –¥–ª—è –ø–æ–∏—Å–∫–∞ ($)']))
        else:
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:

                if data['need_photo']:
                    full_info = f"–ß—É–¥–µ—Å–Ω–æ!\n–í–∞—à –∑–∞–ø—Ä–æ—Å:\n" \
                                f"–ì–æ—Ä–æ–¥: {data['city']}\n" \
                                f"ID –≥–æ—Ä–æ–¥–∞: {data['cityID']}\n" \
                                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data['hotel_amt']}\n" \
                                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {data['photo_amt']}"
                else:
                    full_info = f"–û—Ç–ª–∏—á–Ω–æ!\n–í–∞—à –∑–∞–ø—Ä–æ—Å:\n" \
                                f"–ì–æ—Ä–æ–¥: {data['city']}\n" \
                                f"ID –≥–æ—Ä–æ–¥–∞: {data['cityID']}\n" \
                                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data['hotel_amt']}\n" \
                                f"–ë–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"

            bot.send_message(message.from_user.id, full_info)
            bot.send_message(message.from_user.id, choice(['–û–∂–∏–¥–∞–π—Ç–µ...',
                                                           '–ú–æ–∂–Ω–æ üí§? –ñ–¥—ë–º...',
                                                           '–¢–∏–∫-—Ç–∞–∫ ‚åõ –û–∂–∏–¥–∞–µ–º...',
                                                           '–ù–∞–¥–µ—é—Å—å –º–æ—è üîã –Ω–µ —Å—è–¥–µ—Ç...\n'
                                                           '–®—É—á—Éüòâ –ü—Ä–æ—Å—Ç–æ —á—É—Ç–æ–∫ –ø–æ–¥–æ–∂–¥–µ–º...',
                                                           '–í–æ–∑—å–º–∏—Ç–µ –ø–æ–∫–∞ —á—Ç–æ üéß\n'
                                                           '–ò –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–µ–º...']))

            low_to_high = "PRICE_LOW_TO_HIGH"
            high_to_low = "PRICE_HIGH_TO_LOW"

            if is_low_price:
                sorting = low_to_high
            else:
                sorting = high_to_low

            offers = hotels_request(data['cityID'], data['hotel_amt'], sorting)

            if offers and not data['need_photo']:

                if sorting == "PRICE_LOW_TO_HIGH":
                    sort_val = sorted(offers.items(), key=lambda val: int(val[1][1][1:]))
                else:
                    sort_val = sorted(offers.items(), key=lambda val: int(val[1][1][1:]), reverse=True)

                bot.send_message(message.from_user.id, choice(['–ü–æ–¥–æ–±—Ä–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:',
                                                               '–ß—Ç–æ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å:',
                                                               '–ü–æ–¥–æ–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â–µ–µ:']))
                count = 1

                for i_info in sort_val:
                    bot.send_message(message.from_user.id,
                                     f'{count}. <b>{i_info[1][0]}</b>\n'
                                     f'<i>–¶–µ–Ω–∞: {i_info[1][1]}</i>',
                                     parse_mode='html')
                    count += 1

            elif offers and data['need_photo']:
                sort_offers = sorted(offers.items(), key=lambda val: int(val[1][1][1:]))
                bot.send_message(message.from_user.id, choice(['–ü–æ–¥–æ–±—Ä–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:',
                                                               '–ß—Ç–æ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å:',
                                                               '–ü–æ–¥–æ–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â–µ–µ:']))
                count = 1

                for i_offer in sort_offers:
                    offer_with_photo = photo_request(i_offer[0], data['photo_amt'])
                    bot.send_message(message.from_user.id,
                                     f'{count}. <b>{i_offer[1][0]}</b>\n'
                                     f'<i>–¶–µ–Ω–∞: {i_offer[1][1]}</i>',
                                     parse_mode='html')
                    count += 1

                    for i_name, i_lst in offer_with_photo.items():
                        for i_dct in i_lst:
                            for i_url, i_desc in i_dct.items():
                                photo_file = requests.get(i_url)
                                bot.send_photo(message.from_user.id, photo_file.url, message.chat.id)
                                bot.send_message(message.from_user.id, f'{i_desc}')
            else:
                bot.send_message(message.from_user.id, choice(['–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n'
                                                               '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥',
                                                               '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\n'
                                                               '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥',
                                                               '–ß—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n'
                                                               '–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥']))

    else:
        bot.send_message(message.from_user.id, choice(['–°–∫–∞–∂–∏—Ç–µ –∂–µ –º–Ω–µ "–î–∞"',
                                                       '–ù—É –ø—Ä–æ—à—É –≤–∞—Å üôè\n'
                                                       '–í–≤–µ–¥–∏—Ç–µ "–î–∞"',
                                                       '–¢–∞–∫ —Ö–æ—á–µ—Ç—Å—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–πüò©\n'
                                                       '–ñ–¥—É –≤–∞—à–µ "–î–∞"',
                                                       '"–î–∞"ü•±']))


@bot.message_handler(state=BestDealState.price_min)
def price_min_for_best_deal(message: Message) -> None:

    global tmp_min_price
    if message.text.isdigit() and int(message.text) > 0:
        tmp_min_price = int(message.text)
        bot.set_state(message.from_user.id, BestDealState.price_max, message.chat.id)
        bot.send_message(message.from_user.id, choice(['–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É {$}',
                                                       '–ê —Å–µ–π—á–∞—Å –Ω—É–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ ($)',
                                                       '–¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ ($)']))
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['price_min'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø—Ä–∏—á—ë–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º...\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                                                       '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ - —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
                                                       '–ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤...'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ']))


@bot.message_handler(state=BestDealState.price_max)
def price_max_for_best_deal(message: Message) -> None:

    global tmp_min_price
    if message.text.isdigit() and int(message.text) > tmp_min_price:
        bot.set_state(message.from_user.id, BestDealState.distance, message.chat.id)
        bot.send_message(message.from_user.id, choice(['–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞ (–∫–º)',
                                                       '–¢–µ–ø–µ—Ä—å –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å -\n'
                                                       '–ö–∞–∫–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≤–∞—Å —É—Å—Ç—Ä–æ–∏—Ç (–∫–º)',
                                                       '–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞ (–∫–º)']))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['price_max'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º?\n'
                                               '–ê —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µüßê -\n'
                                               '–ù–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π\n'
                                               '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')


@bot.message_handler(state=BestDealState.distance)
def distance(message: Message) -> None:
    if message.text.isdigit() and int(message.text) > 0:
        bot.set_state(message.from_user.id, BestDealState.info_best_deal)
        bot.send_message(message.from_user.id, choice(['–ö–ª–∞—Å—Å–Ω–æ, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ —É –Ω–∞—Å –µ—Å—Ç—å!\n'
                                                       '–í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?',
                                                       '–£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—Ç–∏–ª —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ!\n'
                                                       '–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?',
                                                       '–û—Ç–ª–∏—á–Ω–æ, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n'
                                                       '–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É?']))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['distance'] = int(message.text)
    else:
        bot.send_message(message.from_user.id, choice(['–ü—Ä–∏–º—É —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ...',
                                                       '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ - —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ',
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ']))


@bot.message_handler(state=BestDealState.info_best_deal)
def info_best_deal(message: Message) -> None:
    if message.text == '–î–∞':
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            if data['need_photo']:
                full_info = f"–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!\n–í–∞—à –∑–∞–ø—Ä–æ—Å:\n" \
                            f"–ì–æ—Ä–æ–¥: {data['city']}\n" \
                            f"ID –≥–æ—Ä–æ–¥–∞: {data['cityID']}\n" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data['hotel_amt']}\n" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {data['photo_amt']}\n" \
                            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_min']}\n" \
                            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_max']}\n" \
                            f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {data['distance']}"

            else:
                full_info = f"–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!\n–í–∞—à –∑–∞–ø—Ä–æ—Å:\n" \
                            f"–ì–æ—Ä–æ–¥: {data['city']}\n" \
                            f"ID –≥–æ—Ä–æ–¥–∞: {data['cityID']}\n" \
                            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data['hotel_amt']}\n" \
                            f"–ë–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n" \
                            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_min']}\n" \
                            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {data['price_max']}\n" \
                            f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {data['distance']}"

            bot.send_message(message.from_user.id, full_info)
            bot.send_message(message.from_user.id, choice(['–û–∂–∏–¥–∞–π—Ç–µ...',
                                                           '–ú–æ–∂–Ω–æ üí§? –ñ–¥—ë–º...',
                                                           '–¢–∏–∫-—Ç–∞–∫ ‚åõ –û–∂–∏–¥–∞–µ–º...',
                                                           '–ù–∞–¥–µ—é—Å—å –º–æ—è üîã –Ω–µ —Å—è–¥–µ—Ç...\n'
                                                           '–®—É—á—Éüòâ –ü—Ä–æ—Å—Ç–æ —á—É—Ç–æ–∫ –ø–æ–¥–æ–∂–¥–µ–º...',
                                                           '–í–æ–∑—å–º–∏—Ç–µ –ø–æ–∫–∞ —á—Ç–æ üéß\n'
                                                           '–ò –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–µ–º...']))

            offers = hotels_request(data['cityID'],
                                    data['hotel_amt'],
                                    'DISTANCE',
                                    price_min=data['price_min'],
                                    price_max=data['price_max'],
                                    distance=data['distance'])

            sort_offers = sorted(offers.items(), key=lambda val: int(val[1][1][1:]))

            if offers and not data['need_photo']:
                bot.send_message(message.from_user.id, choice(['–ü–æ–¥–æ–±—Ä–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:',
                                                               '–ß—Ç–æ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å:',
                                                               '–ü–æ–¥–æ–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â–µ–µ:']))

                count = 1

                for i_info in sort_offers:
                    bot.send_message(message.from_user.id,
                                     f'{count}. <b>{i_info[1][0]}</b>\n'
                                     f'<i>–¶–µ–Ω–∞: {i_info[1][1]}</i>\n'
                                     f'<i>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {i_info[1][2]} –∫–º</i>',
                                     parse_mode='html')
                    count += 1

            elif offers and data['need_photo']:
                count = 1

                for i_offer in sort_offers:
                    offer_with_photo = photo_request(i_offer[0], data['photo_amt'])
                    bot.send_message(message.from_user.id,
                                     f'{count}. <b>{i_offer[1][0]}</b>\n'
                                     f'<i>–¶–µ–Ω–∞: {i_offer[1][1]}</i>\n'
                                     f'<i>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {i_offer[1][2]} –∫–º</i>',
                                     parse_mode='html')
                    count += 1

                    for i_name, i_lst in offer_with_photo.items():
                        for i_dct in i_lst:
                            for i_url, i_desc in i_dct.items():
                                photo_file = requests.get(i_url)
                                bot.send_photo(message.from_user.id, photo_file.url, message.chat.id)
                                bot.send_message(message.from_user.id, f'{i_desc}')
            else:
                bot.send_message(message.from_user.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤üòî\n'
                                                       '–õ–∏–±–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ‚ö†\n'
                                                       '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥')
    else:
        bot.send_message(message.from_user.id, choice(['–°–∫–∞–∂–∏—Ç–µ –∂–µ –º–Ω–µ "–î–∞"',
                                                       '–ù—É –ø—Ä–æ—à—É –≤–∞—Å üôè\n'
                                                       '–í–≤–µ–¥–∏—Ç–µ "–î–∞"',
                                                       '–¢–∞–∫ —Ö–æ—á–µ—Ç—Å—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–πüò©\n'
                                                       '–ñ–¥—É –≤–∞—à–µ "–î–∞"',
                                                       '"–î–∞"ü•±',
                                                       '–Ø —Ç–∞–∫ —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π...\n'
                                                       '–ê —É –º–µ–Ω—è ü§ê\n'
                                                       '–ù–∞–ø–∏—à–∏—Ç–µ "–î–∞"']))
